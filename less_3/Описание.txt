Задание №1
Подключился DeBeaver к срверу, запустил список команд из файла examples.sql. Все отработало без ошибок. 
БД и таблицы созданы. Задание выполненно.

Задание № 2
Загрузил код из файла examples.sql (кроме той части, где создавалась БД).
Отработал генератор, данные из генератора в файле fulldb25-12-2019 21-17.sql
Открыл данный файл в DeBeaver  и исполнил скрипт. Данные закгрузились без ошибок.
Поскольку не обнаружил возможность поставить в поле sex либо F либо M, реализовал это чрез цифры 1 и 2.
Тип поля переделывать не стал, так и оставил char(1), для тестов. После загрузки данных выполнил 2 запрса

UPDATE profiles SET sex='M' WHERE sex='1';
UPDATE profiles SET sex='F' WHERE sex='2';

Задание №3
Структура данных предельна понятна. Добавлять можно огромное чило таблиц и полей, приближая БД к  реальности.
Но в этом смысла не вижу, специально создавали упращенный вариант для обучения, тренировки и освоение навыков.
Отвечая на Ваш вопрос о связях между users и  friendship. Считаю , что связь один к одному.
Так как один ключ соответсует тлько одному ключу. 
То есть у user может быть только одна пара user_id и friend_id и наоборот.
ну а из того что есть, я бы точно по другому сдела бы frendship.
 В текущей ситуации мне кажеться сложным, получить всех друзей одного user. Я бы наврное сделал две таблицы "ЗапросыДружбы" и "Дружба".
Причем в таблице "Дружба" сдела бы поля Друг_1 и Друг_2. И после того, как факт дружбы будет утсновлен вносил бы 
две зеркальные записи.
Тогда лекго получить список друзей select Друг_1 from Дружба where Друг_2 = Нужный user
